<?xml version="1.0" encoding="UTF-8"?>
<metrics>
  <metric extern="true" id="60005" type="folder" originalName="Technical Criteria" active="N/A" detached="N/A" ignored="false"/>
  <metric extern="true" id="66030" type="folder" originalName="Rule Compliance" active="N/A" detached="N/A" ignored="false"/>
  <metric id="20140522" originalName="GreenIT" type="business-criterion" extern="false" active="true" detached="false" ignored="false"/>
  <metric id="20140523" originalName="GreenIT - focus on pipe leaks - data access efficiency" type="technical-criterion" extern="false" active="true" detached="false" ignored="false"/>
  <metric id="20140524" originalName="GreenIT - focus on pipe ruptures - avoiding failure" type="technical-criterion" extern="false" active="true" detached="false" ignored="false"/>
  <metric id="20140525" originalName="GreenIT - focus on pipe leaks - algorithmic costs" type="technical-criterion" extern="false" active="true" detached="false" ignored="false"/>
  <metric id="20140526" originalName="GreenIT - focus on pipe leaks - resource economy" type="technical-criterion" extern="false" active="true" detached="false" ignored="false"/>
  <metric id="592" originalName="Ensure you provide a user-defined copy constructor or disable copy when a class allocates memory in its constructor" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="678" originalName="Never throw an exception from a Destructor" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="1588" originalName="Use WHEN OTHERS in exception management" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="2232" originalName="Pages should use error handling page" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="2564" originalName="Use a single Error Handling Method" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="2590" originalName="Avoid using &quot;On error Resume Next&quot; in the Class event terminate" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="3062" originalName="Use of error handling page" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="4064" originalName="Avoid Procedures using an Insert, Update, Delete, Create Table or Select without including error management" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="4066" originalName="Avoid Stored Procedures not returning a status value" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="4070" originalName="Avoid use of &quot;truncate table&quot;" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="4612" originalName="Avoid using native Methods (JNI)" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="4652" originalName="Avoid direct Class inheritance from java.lang.Throwable" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="4656" originalName="Avoid declaring throwing an exception and not throwing it" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="4696" originalName="Avoid using 'System.err' and 'System.out' within a try catch block" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="4698" originalName="Avoid using 'System.err' and 'System.out' outside a try catch block" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="4702" originalName="Avoid using 'Throwable.printStackTrace()' with no argument" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="5050" originalName="Avoid using HANDLE CONDITION" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="5052" originalName="Avoid using IGNORE CONDITION" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="5054" originalName="Avoid using HANDLE ABEND" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="5092" originalName="Include a WHEN OTHER clause when using EVALUATE" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7152" originalName="Avoid Fields in Servlet Classes that are not final static" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7154" originalName="Avoid Fields in Action Classes that are not final static" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7202" originalName="Check usage of '==' and '!=' on objects" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7438" originalName="Avoid non thread safe singleton" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7442" originalName="Avoid to use this within Constructor in multi-thread environment" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7446" originalName="Avoid double checked locking for JSE 4.x and previous version" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7494" originalName="Persistent class method's equals() and hashCode() must access its fields through getter methods" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7504" originalName="Persistent classes should Implement hashCode() and equals()" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7506" originalName="Define equals() and hashCode() for component" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7508" originalName="Collection-typed attributes getter must be defined with the correct interface" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7518" originalName="Avoid missing WHEN OTHERS in CASE statements" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7520" originalName="Avoid unchecked return code (SY-SUBRC) after OPEN SQL or READ statement" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7528" originalName="Never use the ON CHANGE OF statement" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7536" originalName="Avoid using AT Events in combination of LOOP AT .... WHERE constructs" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7548" originalName="Never use incompatible statements with the CICS environment" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7556" originalName="Avoid instanceof in Methods that override or implement Object.equals(), Comparable.compareTo()" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7586" originalName="Avoid cyclic calls between Event and its handled Method" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7636" originalName="Use version instead of timestamp" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7640" originalName="Avoid catch blocks with assertion" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7650" originalName="All types of a serializable Class must be serializable" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7652" originalName="Avoid throwing an exception in a catch block without chaining it" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7688" originalName="Never truncate data in MOVE statements" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7690" originalName="Avoid unchecked return code (SQLCODE) after EXEC SQL query" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7698" originalName="Files should be declared with a FILE-STATUS" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7708" originalName="Avoid using session.setFlushMode(FlushMode.COMMIT, FlushMode.NEVER or FlushMode.MANUAL)" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7710" originalName="Avoid non serializable Entities" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7712" originalName="Avoid public/protected setter for the generated identifier field" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7722" originalName="Avoid using references to the id in the persistent class's method equals()" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7724" originalName="Overriden equals() Methods in persistent Subclasses should only reference properties from the persistent base Class" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7728" originalName="Avoid thread creation for application running on application server" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7730" originalName="Use declarative transaction" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7756" originalName="Avoid using READ statement without AT END clause or INVALID KEY clause" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7782" originalName="Avoid empty finally blocks" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7788" originalName="Avoid empty catch blocks" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7824" originalName="Avoid directly throwing instance of Exception class" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7850" originalName="Avoid raising an exception in a Web Dynpro Supply Function or in a Method called by a Supply Function" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7862" originalName="Avoid catching an exception of type Exception, RuntimeException, or Throwable" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7864" originalName="BAPIs must not cause the Program to abort or terminate" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7884" originalName="Avoid disabling source code inspection" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7888" originalName="Web Dynpro - Never use direct calls to routine via &quot;me-&gt;&quot;, use &quot;wd_This-&gt;&quot; instead" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7890" originalName="Web Dynpro - Never use INCLUDE statement" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7892" originalName="Web Dynpro - Avoid changing the program flow" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7910" originalName="Never exit a finally block with a return, break, continue, or throw" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7942" originalName="Avoid EJBs using 'synchronized' qualifier, 'wait', 'notify' and 'notifyAll' Methods" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7964" originalName="Avoid directly instantiating a Class used as a managed bean" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7998" originalName="Avoid local variables that are not initialized at declaration time" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="8000" originalName="Avoid 'catch-all' statement" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="8002" originalName="Never perform C-style cast between incompatible Class pointers" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="8004" originalName="Avoid using 'delete this'" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="8006" originalName="Avoid Classes with a copy Constructor and the default Destructor or assignment operator" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="8010" originalName="Do not overload the ampersand, comma, logical AND or logical OR operators" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="8012" originalName="Avoid unchecked return code (SY-SUBRC) after opening and reading dataset" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="8014" originalName="Avoid unchecked return code (SY-SUBRC) after AUTHORITY-CHECK" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="8024" originalName="Avoid Classes with a non-empty Destructor and the default assignment operator or copy Constructor" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="8026" originalName="Avoid Classes with an assignment operator and the default Destructor or copy constructor" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="8028" originalName="Avoid missing default in switch statements" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="8030" originalName="Check alphanumeric data before moving it into numeric data" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="8034" originalName="Variables defined in Working-Storage section must be initialized before to be read" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="8052" originalName="Avoid setting a pointer to the address of a local variable defined in a lower scope" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="8054" originalName="Avoid calling blocking functions with an infinite timeout" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="8056" originalName="Method override fails due to mismatch of const/volatile qualifiers" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="8064" originalName="Assignment operator should assign all non-static members of the target object" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="8072" originalName="Never define collection of 'std::auto_ptr'" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="8074" originalName="Avoid using 'class' or 'struct' parameters with variadic Functions" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="8090" originalName="Avoid using NaN to test the result of an expression" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="8094" originalName="Avoid locking of Objects with weak identities" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="8096" originalName="Avoid testing floating point numbers for equality" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="8106" originalName="Avoid empty IF-ENDIF blocks" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="8112" originalName="Avoid improper processing of the execution status of data handling operations" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="8114" originalName="Avoid numerical data corruption during incompatible mutation (ABAP)" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="1578" originalName="Avoid using LONG &amp; LONG RAW datatype for Table Columns" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="1580" originalName="Avoid using execute immediate" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="1598" originalName="Avoid Rule HINT  /*+ rule */ or --+ rule in PL/SQL code" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="4084" originalName="Avoid nested Stored Procedures using temporary Tables" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="5056" originalName="Using SEARCH ALL only with sorted data" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="5058" originalName="Avoid using SORT" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="5060" originalName="Avoid using MERGE" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="5554" originalName="Avoid having SQL code in Triggers named &quot;pre-record&quot;" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="6184" originalName="Avoid Artifacts with Subqueries (Power Builder)" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7130" originalName="Avoid Artifacts with High Depth of Nested Subqueries" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7344" originalName="Avoid &quot;SELECT *&quot; queries" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7346" originalName="Avoid redundant indexes" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7348" originalName="Avoid too many Indexes on one Table" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7350" originalName="Avoid Tables having Indexes with a too large Index definition" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7358" originalName="Avoid call to AcceptChanges in a loop" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7366" originalName="File descriptor block must be defined with 0 record" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7386" originalName="Avoid Tables without a clustered Index" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7418" originalName="Avoid SQL queries using functions on indexed columns in the WHERE clause" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7420" originalName="Avoid SQL queries with implicit conversions in the WHERE clause" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7428" originalName="Avoid SQL queries not using the first column of a composite index in the WHERE clause" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7436" originalName="Prefer UNION ALL to UNION" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7476" originalName="Turn off &quot;Multiple SQL statements for each measure&quot;" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7480" originalName="Use aggregate awareness for indicators" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7482" originalName="Do not use Cartesian products in Universe properties" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7488" originalName="Use lazy fetching for collection" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7490" originalName="Avoid UPDATE trigger firing when not necessary" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7496" originalName="Use table-per-subclass strategy when subclasses have many properties" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7498" originalName="Collection must be the same between getter and setter" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7500" originalName="Use table-per-class-hierarchy when subclasses have few properties" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7502" originalName="Never use array to map a collection" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7530" originalName="Avoid &quot;SELECT *&quot; or &quot;SELECT SINGLE *&quot; queries" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7534" originalName="Avoid READ TABLE without BINARY SEARCH" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7538" originalName="Avoid using SELECT ... INTO CORRESPONDING FIELDS OF" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7542" originalName="Avoid using FOR ALL ENTRIES IN without emptiness check" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7544" originalName="Avoid using SELECT ... ENDSELECT statement" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7592" originalName="Avoid using &quot;ORDER BY&quot; in SELECTS" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7594" originalName="Avoid using &quot;SELECT DISTINCT&quot;, use DELETE-ADJACENT" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7634" originalName="Avoid select-before-update when the Table is not associated to an UPDATE Trigger" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7642" originalName="Avoid SQL queries on XXL tables not using the first column of a composite index in the WHERE clause" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7644" originalName="Avoid executing multiple OPEN statements" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7658" originalName="Avoid SQL queries on XXL Tables using Functions on indexed Columns in the WHERE clause" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7660" originalName="Never use SQL queries with a cartesian product on XXL Tables" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7662" originalName="Avoid SQL queries on XXL Tables with implicit conversions in the WHERE clause" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7664" originalName="Avoid using FOR ALL ENTRIES IN without emptiness check on XXL Tables" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7666" originalName="Avoid using SELECT ... ENDSELECT statement on XXL Tables" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7692" originalName="Each opened file must be closed" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7702" originalName="Use a third party connection pool" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7806" originalName="Avoid Artifacts with Group By" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7808" originalName="Avoid Artifacts with SQL statement including subqueries" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7810" originalName="Avoid Artifacts with a Complex SELECT Clause" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7820" originalName="Never use SQL queries with a cartesian product" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7822" originalName="Avoid Artifacts with queries on more than 4 Tables" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7828" originalName="Avoid Artifacts with High RAW SQL Complexity" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7866" originalName="Avoid SELECT ... BYPASSING BUFFER" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7870" originalName="Avoid using the NOT LIKE operator in WHERE clauses" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7872" originalName="Avoid using IS [NOT] NULL in WHERE condition" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7876" originalName="Avoid using SELECT ... FOR UPDATE" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7878" originalName="Avoid Open SQL SELECT queries without WHERE condition" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7902" originalName="Avoid SQL queries that no index can support" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7904" originalName="Avoid SQL queries on XXL tables that no index can support" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="8080" originalName="Avoid exists independent clauses" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="8082" originalName="Avoid Tables without Primary Key" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="8110" originalName="Avoid not using dedicated stored procedures when processing multiple data accesses" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7198" originalName="Avoid String concatenation in loops (.NET)" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7200" originalName="Avoid String concatenation in loops (JEE)" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7204" originalName="Avoid method invocation in a loop termination expression" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7210" originalName="Avoid instantiations inside loops" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7212" originalName="Avoid instantiations inside loops (.NET)" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7218" originalName="Avoid OPEN/CLOSE inside loops" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7352" originalName="Avoid calling properties that clone values in loops" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7424" originalName="Avoid using SQL queries inside a loop" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7470" originalName="Avoid doing select on Datatable in loop" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7532" originalName="Avoid nested SELECT ... ENDSELECT statements" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7790" originalName="Avoid Cursors inside a loop" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7868" originalName="Avoid Open SQL queries in loops" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7880" originalName="Avoid nested loops" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7894" originalName="Avoid using LOOP INTO, use LOOP ASSIGNING instead" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7954" originalName="Avoid indirect String concatenation inside loops" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7962" originalName="Avoid direct or indirect remote calls inside a loop" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="1072" originalName="Avoid using memory management Functions (free/malloc/realloc)" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="1074" originalName="Avoid using signals management Functions" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="3612" originalName="Avoid missing release of SQL connection after an effective lifetime (C#, VB.NET)" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="4694" originalName="Avoid using 'System.gc'" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="4744" originalName="EJB Entity access through their local Interface" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="4746" originalName="EJB Session access through their local Interface" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7194" originalName="Avoid large number of String concatenation (.NET)" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7196" originalName="Avoid large number of String concatenation (JEE)" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7250" originalName="Avoid String initialization with String object (created using the 'new' keyword)" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7254" originalName="Declare as Static all methods not using instance members (JEE)" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7270" originalName="Declare as Static all methods not using instance members (.NET)" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7638" originalName="Avoid using DriverManager" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7720" originalName="Avoid too many EJB bean" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7936" originalName="Avoid using finalize()" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="7940" originalName="Avoid Stateful Beans not removed" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="8048" originalName="Invoke 'delete' with the same form as the matching 'new'" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="8068" originalName="Do not return a dereferenced pointer allocated inside the function" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="8100" originalName="Blocking synchronous calls should have associated timeouts" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="8104" originalName="Close database resources ASAP" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
  <metric id="8108" originalName="Avoid missing release of stream connection after an effective lifetime" type="quality-rule" extern="true" active="true" detached="false" ignored="false"/>
</metrics>
